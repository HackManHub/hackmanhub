local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v85=v2(v0(v30,16));if v19 then local v115=0;local v116;while true do if (v115==1) then return v116;end if (v115==0) then v116=v5(v85,v19);v19=nil;v115=1;end end else return v85;end end end);local function v20(v31,v32,v33) if v33 then local v86=0 -0 ;local v87;while true do if (v86==(0 -0)) then v87=(v31/((879 -(282 + 595))^(v32-(1 -0))))%((4 -(1639 -(1523 + 114)))^(((v33-((558 + 62) -(555 + 64))) -(v32-(932 -(857 + 74)))) + (569 -(367 + (286 -85))))) ;return v87-(v87%(928 -(214 + 713))) ;end end else local v88=2^(v32-1) ;return (((v31%(v88 + v88))>=v88) and (1 + 0)) or (0 + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (1067 -(68 + 997)) );v18=v18 + 2 ;return (v36 * (1526 -(226 + 1044))) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (12 -9) );v18=v18 + ((288 -167) -((58 -26) + 85)) ;return (v40 * (16441815 + 335401)) + (v39 * (14533 + 51003)) + (v38 * (1213 -(892 + 65))) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=1 -0 ;local v44=(v20(v42,351 -(16 + 71 + 263) ,200 -(67 + 113) ) * ((2 + (0 -0))^32)) + v41 ;local v45=v20(v42,51 -30 ,23 + 8 );local v46=((v20(v42,32)==((3 + 0) -2)) and  -1) or ((1744 -(368 + 423)) -(802 + 150)) ;if (v45==0) then if (v44==(0 -0)) then return v46 * (0 -(0 -0)) ;else local v117=0;while true do if (v117==(0 + 0)) then v45=998 -(915 + (100 -(10 + 8))) ;v43=0 -0 ;break;end end end elseif (v45==(1193 + 854)) then return ((v44==((0 -0) -0)) and (v46 * (1/(1187 -(1069 + (560 -(416 + 26))))))) or (v46 * NaN) ;end return v8(v46,v45-(2320 -1297) ) * (v43 + (v44/((3 -1)^(165 -113)))) ;end local function v25(v47) local v48;if  not v47 then v47=v23();if (v47==(0 + 0)) then return "";end end v48=v3(v16,v18,(v18 + v47) -1 );v18=v18 + v47 ;local v49={};for v66=1 -0 , #v48 do v49[v66]=v2(v1(v3(v48,v66,v66)));end return v6(v49);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v50=(function() return function(v89,v90,v91,v92,v93,v94,v95,v96) local v89=(function() return 0;end)();local v90=(function() return;end)();local v92=(function() return;end)();while true do if (v89==(611 -(210 + 401))) then local v122=(function() return 396 -(115 + 281) ;end)();local v123=(function() return;end)();while true do if ((1821 -(1483 + 338))==v122) then v123=(function() return 1695 -(1229 + 466) ;end)();while true do if (v123~=(578 -(386 + 192))) then else v90=(function() return v91();end)();v92=(function() return nil;end)();v123=(function() return 2 -1 ;end)();end if (v123~=(1207 -(696 + 510))) then else v89=(function() return  #"!";end)();break;end end break;end end end if (v89== #"!") then if (v90== #"~") then v92=(function() return v91()~=(0 -0) ;end)();elseif (v90==(869 -(550 + 317))) then v92=(function() return v93();end)();elseif (v90== #"gha") then v92=(function() return v94();end)();end v95[v96]=(function() return v92;end)();break;end end return v89,v90,v91,v92,v93,v94,v95,v96;end;end)();local v51=(function() return function(v97,v98,v99,v100,v101,v102,v103,v104,v105) local v106=(function() return 0;end)();local v97=(function() return;end)();local v98=(function() return;end)();while true do if (v106==0) then v97=(function() return 0 -0 ;end)();v98=(function() return nil;end)();v106=(function() return 1 -0 ;end)();end if ((1 -0)==v106) then local v125=(function() return 0;end)();while true do if (0~=v125) then else local v126=(function() return 0;end)();while true do if (v126~=(0 -0)) then else while true do if (v97~=(1262 -(1091 + 171))) then else v98=(function() return v99();end)();if (v100(v98, #"!", #":")==0) then local v137=(function() return 1665 -(970 + 695) ;end)();local v138=(function() return;end)();local v139=(function() return;end)();local v140=(function() return;end)();while true do if (v137==1) then local v378=(function() return 0 + 0 ;end)();while true do if ((0 -0)==v378) then v140=(function() return {v101(),v101(),nil,nil};end)();if (v138==(1990 -(582 + 1408))) then local v486=(function() return 0;end)();local v487=(function() return;end)();while true do if (v486==(0 -0)) then v487=(function() return 0 -0 ;end)();while true do if (v487==(374 -(123 + 251))) then v140[ #"xxx"]=(function() return v101();end)();v140[ #".com"]=(function() return v101();end)();break;end end break;end end elseif (v138== #"!") then v140[ #"xxx"]=(function() return v102();end)();elseif (v138==2) then v140[ #"asd"]=(function() return v102() -((2 -0)^(60 -44)) ;end)();elseif (v138== #"asd") then local v508=(function() return 1824 -(1195 + 629) ;end)();local v509=(function() return;end)();while true do if (v508==(0 -0)) then v509=(function() return 0;end)();while true do if (v509~=(0 -0)) then else v140[ #"xnx"]=(function() return v102() -((243 -(187 + 54))^(796 -(162 + 618))) ;end)();v140[ #"http"]=(function() return v101();end)();break;end end break;end end end v378=(function() return 699 -(208 + 490) ;end)();end if ((1 + 0)==v378) then v137=(function() return 1 + 1 ;end)();break;end end end if (v137~=0) then else local v379=(function() return 0;end)();local v380=(function() return;end)();while true do if (v379~=(0 -0)) then else v380=(function() return 0 -0 ;end)();while true do if (v380==(836 -(660 + 176))) then v138=(function() return v100(v98,1 + 1 , #"gha");end)();v139=(function() return v100(v98, #"asd1",1 + 5 );end)();v380=(function() return 203 -(14 + 188) ;end)();end if (v380~=(676 -(534 + 141))) then else v137=(function() return 1001 -(451 + 549) ;end)();break;end end break;end end end if (2==v137) then if (v100(v139, #"[", #"}")== #">") then v140[1 + 1 ]=(function() return v103[v140[2 + 0 ]];end)();end if (v100(v139,2 + 0 ,2)== #"]") then v140[ #"91("]=(function() return v103[v140[ #"xxx"]];end)();end v137=(function() return 6 -3 ;end)();end if (v137==(4 -1)) then if (v100(v139, #"91(", #"xnx")~= #"~") then else v140[ #"0313"]=(function() return v103[v140[ #"0836"]];end)();end v104[v105]=(function() return v140;end)();break;end end end break;end end return v97,v98,v99,v100,v101,v102,v103,v104,v105;end end end end end end end;end)();local v52=(function() return function(v107,v108,v109) local v110=(function() return 0;end)();local v111=(function() return;end)();while true do if (v110~=(0 -0)) then else v111=(function() return 0 + 0 ;end)();while true do if (v111==0) then local v127=(function() return 0 -0 ;end)();local v128=(function() return;end)();while true do if (v127~=(0 + 0)) then else v128=(function() return 0 + 0 ;end)();while true do if (0~=v128) then else v107[v108-#"\\" ]=(function() return v109();end)();return v107,v108,v109;end end break;end end end end break;end end end;end)();local v53=(function() return {};end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {v53,v54,nil,v55};end)();local v57=(function() return v23();end)();local v58=(function() return {};end)();for v68= #",",v57 do FlatIdent_3B7E2,Type,v21,Cons,v24,v25,v58,v68=(function() return v50(FlatIdent_3B7E2,Type,v21,Cons,v24,v25,v58,v68);end)();end v56[ #"-19"]=(function() return v21();end)();for v69= #"[",v23() do FlatIdent_5431F,Descriptor,v21,v20,v22,v23,v58,v53,v69=(function() return v51(FlatIdent_5431F,Descriptor,v21,v20,v22,v23,v58,v53,v69);end)();end for v70= #"!",v23() do v54,v70,v28=(function() return v52(v54,v70,v28);end)();end return v56;end local function v29(v60,v61,v62) local v63=v60[1 -0 ];local v64=v60[(667 -324) -(218 + 123) ];local v65=v60[1584 -(1535 + 33 + 13) ];return function(...) local v71=v63;local v72=v64;local v73=v65;local v74=v27;local v75=1 + 0 ;local v76= -(1 + 0);local v77={};local v78={...};local v79=v12("#",...) -(1 + 0) ;local v80={};local v81={};for v112=0 + 0 ,v79 do if ((v112>=v73) or (1284==3788)) then v77[v112-v73 ]=v78[v112 + 1 + 0 + 0 ];else v81[v112]=v78[v112 + (1 -0) ];end end local v82=(v79-v73) + ((2190 -(478 + 244)) -(899 + (1085 -(440 + 77)))) ;local v83;local v84;while true do v83=v71[v75];v84=v83[1 + 0 ];if ((v84<=(145 -85)) or (3588<=2264)) then if (v84<=(632 -(268 + 335))) then if (v84<=(304 -(60 + 105 + 125))) then if (v84<=((2115 -1537) -(426 + 146))) then if (v84<=(1 + 1)) then if (v84<=(1456 -(282 + 1174))) then v81[v83[813 -(569 + (1798 -(655 + 901))) ]]=v81[v83[8 -5 ]] -v81[v83[1 + 3 ]] ;elseif (v84==(1025 -(706 + 318))) then v81[v83[1 + 1 + 0 + 0 ]]=v81[v83[1254 -(721 + 530) ]]%v83[1275 -(945 + 326) ] ;else local v142=0 -0 ;local v143;while true do if ((v142==(0 + 0)) or (3426<2647)) then v143=v83[702 -(271 + 429) ];v81[v143]=v81[v143]();break;end end end elseif (v84<=(3 + 0 + 1)) then if (v84==((7 -5) + 1)) then if (v81[v83[2 + 0 ]]<=v81[v83[4]]) then v75=v75 + (1501 -(1408 + 92)) ;else v75=v83[1089 -(461 + 625) ];end else v81[v83[1290 -(993 + 295) ]]=v81[v83[1 + 2 ]]/v83[1175 -(418 + 753) ] ;end elseif (v84>5) then if (v83[(1446 -(695 + 750)) + 1 ]<v81[v83[(3 -2) + 3 ]]) then v75=v83[1 + 2 ];else v75=v75 + (1 -0) ;end else local v145=1244 -((748 -263) + 759) ;local v146;while true do if ((v145==(0 + 0)) or (1576==4375)) then v146=v83[(2135 -1604) -(406 + 123) ];v81[v146]=v81[v146](v13(v81,v146 + ((1541 -(285 + 66)) -(442 + 747)) ,v83[1772 -(1749 + 20) ]));break;end end end elseif ((v84<=((6 -3) + 7)) or (2920<2592)) then if ((v84<=(1330 -(1249 + 73))) or (1110>=2819)) then if (v84==(3 + 4)) then v81[v83[1 + 1 ]]=v83[1 + (1312 -(682 + 628)) ]~=(1145 -(466 + 679)) ;elseif (v83[4 -2 ]==v81[v83[5 -1 ]]) then v75=v75 + 1 ;else v75=v83[8 -(1 + 4) ];end elseif ((1824<=2843) and (v84==(1909 -(106 + 1794)))) then if (v81[v83[1 + 1 ]]>v81[v83[3 + 1 ]]) then v75=v75 + (300 -(176 + 123)) + 0 ;else v75=v75 + v83[8 -5 ] ;end else v81[v83[5 -3 ]][v83[117 -(4 + 110) ]]=v81[v83[588 -(57 + 527) ]];end elseif (v84<=(1439 -(41 + 1386))) then if ((3062==3062) and (v84==(114 -(17 + 86)))) then if (v81[v83[1 + 1 + 0 ]]==v83[2 + 0 + 2 ]) then v75=v75 + (1 -0) ;else v75=v83[8 -5 ];end elseif  not v81[v83[(1079 -(239 + 30)) -(329 + 479) ]] then v75=v75 + (855 -(174 + 680)) ;else v75=v83[169 -(122 + 44) ];end elseif ((716<=4334) and (v84==(4 + 9))) then local v150=(0 + 0) -0 ;local v151;local v152;local v153;local v154;while true do if ((1001<3034) and (v150==(6 -4))) then for v423=v151,v76 do local v424=0 + 0 ;while true do if (v424==(0 + 0)) then v154=v154 + 1 ;v81[v423]=v152[v154];break;end end end break;end if (v150==0) then v151=v83[3 -1 ];v152,v153=v74(v81[v151](v13(v81,v151 + (66 -(30 + 35)) ,v83[3 + 0 ])));v150=1258 -(1043 + 214) ;end if (v150==(1390 -(135 + (2219 -965)))) then v76=(v153 + v151) -(3 -2) ;v154=1212 -(323 + 889) ;v150=5 -3 ;end end elseif ((v81[v83[582 -(361 + 219) ]]<v83[4]) or (977>1857)) then v75=v83[577 -((317 -215) + 472) ];else v75=v75 + (321 -(53 + 267)) ;end elseif ((v84<=(5 + 16)) or (868>897)) then if (v84<=(430 -(15 + (713 -(306 + 9))))) then if (v84<=(997 -(18 + 964))) then v81[v83[2 -(0 -0) ]]={};elseif ((v84>(60 -44)) or (1115==4717)) then v81[v83[2 + 0 ]][v83[2 + 1 ]]=v83[1863 -(821 + 1038) ];else v81[v83[4 -2 ]]=v83[853 -(20 + 145 + 685) ];end elseif (v84<=(33 -14)) then if (v84==(7 + 11)) then v81[v83[2 + 0 ]]=v81[v83[1029 -(834 + 192) ]] * v81[v83[130 -(116 + 10) ]] ;else v81[v83[2]]=v81[v83[1 + 0 + 1 + 1 ]]/v81[v83[742 -(542 + 196) ]] ;end elseif ((2740<4107) and (v84>(42 -22))) then v81[v83[1 + 1 ]]=v81[v83[2 + 1 ]] -v83[2 + (5 -3) ] ;elseif (v81[v83[4 -2 ]]<v83[9 -5 ]) then v75=v75 + (1552 -(1126 + 425)) ;else v75=v83[(1783 -(1140 + 235)) -(118 + 183 + 104) ];end elseif ((284<700) and (v84<=25)) then if (v84<=(385 -(103 + 9 + 250))) then if (v84>(86 -64)) then local v162=v83[1123 -(118 + 1003) ];local v163=v81[v162];for v308=v162 + 1 + 0 ,v83[8 -5 ] do v7(v163,v81[v308]);end elseif ((386>=137) and (v81[v83[2 + 0 ]]<v83[3 + 1 ])) then v75=v83[380 -(142 + 235) ];else v75=v75 + (4 -3) ;end elseif ((923==923) and (v84==(18 + 6))) then local v164=v83[1 + 1 ];local v165,v166=v74(v81[v164](v13(v81,v164 + (978 -(553 + 424)) ,v76)));v76=(v166 + v164) -(2 -1) ;local v167=882 -(244 + 638) ;for v309=v164,v76 do v167=v167 + (1 -0) ;v81[v309]=v165[v167];end else local v168=v83[2 + 0 ];local v169=v83[2 + 2 + 0 ];local v170=v168 + 2 + 0 ;local v171={v81[v168](v81[v168 + 1 + 0 ],v81[v170])};for v312=2 -1 ,v169 do v81[v170 + v312 ]=v171[v312];end local v172=v171[2 -1 ];if v172 then local v352=0 -(52 -(33 + 19)) ;while true do if ((0 -(0 + 0))==v352) then v81[v170]=v172;v75=v83[1102 -(35 + 1064) ];break;end end else v75=v75 + 1 + 0 ;end end elseif ((v84<=(130 -(308 -205))) or (4173==359)) then if (v84>(779 -(239 + 514))) then v61[v83[2 + 1 ]]=v81[v83[(587 + 744) -((1562 -765) + 499 + 33) ]];else v81[v83[2 + 0 ]]=v81[v83[2 + 1 ]] + v81[v83[4 + (689 -(586 + 103)) ]] ;end elseif (v84>(65 -37)) then local v176=v83[1204 -(373 + 829) ];v81[v176](v13(v81,v176 + (732 -(44 + 432 + 255)) ,v83[224 -(55 + 166) ]));else v81[v83[1132 -(369 + 761) ]]=v81[v83[2 + 1 ]] * v83[(18 -12) -2 ] ;end elseif ((1722==1722) and (v84<=((1571 -(1309 + 179)) -39))) then if (v84<=(274 -(64 + (313 -139)))) then if (v84<=(5 + 27)) then if (v84<=(44 -14)) then if (v81[v83[(148 + 190) -(144 + 192) ]]>v81[v83[220 -(42 + 174) ]]) then v75=v75 + (1369 -(34 + 1334)) ;else v75=v75 + v83[2 + 1 ] ;end elseif (v84>((67 -42) + 6)) then v81[v83[2 + 0 ]]=v29(v72[v83[3 + 0 ]],nil,v62);elseif (v81[v83[1 + 0 + 1 ]]==v81[v83[323 -(134 + 185) ]]) then v75=v75 + (1505 -(363 + 1141)) ;else v75=v83[1583 -(1183 + (843 -446)) ];end elseif (v84<=(103 -(137 -68))) then if ((v84==(25 + 8)) or (3994<=3820)) then local v179=v83[2 + 0 ];local v180,v181=v74(v81[v179](v13(v81,v179 + (1976 -(1913 + (671 -(295 + 314)))) ,v76)));v76=(v181 + v179) -(1 + 0) ;local v182=1172 -(786 + 386) ;for v315=v179,v76 do v182=v182 + (3 -2) ;v81[v315]=v180[v182];end else local v183=v83[5 -3 ];local v184=v81[v183];for v318=v183 + 1 ,v76 do v7(v184,v81[v318]);end end elseif (v84==(1968 -(565 + 1368))) then if (v81[v83[7 -5 ]]~=v81[v83[4]]) then v75=v75 + (1662 -(1477 + 184)) ;else v75=v83[(6 -3) -0 ];end else local v185=(1962 -(1300 + 662)) -0 ;local v186;local v187;local v188;local v189;while true do if (v185==(0 + 0)) then v186=v83[858 -((1770 -1206) + (2047 -(1178 + 577))) ];v187,v188=v74(v81[v186]());v185=2 -1 ;end if ((1488<1641) and (v185==(2 -0))) then for v425=v186,v76 do local v426=0 -0 ;while true do if ((304 -(244 + 60))==v426) then v189=v189 + 1 + 0 + 0 ;v81[v425]=v187[v189];break;end end end break;end if ((433<=2235) and (v185==(477 -(41 + 435)))) then v76=(v188 + v186) -(1002 -(938 + 63)) ;v189=0 + 0 ;v185=1127 -(936 + 189) ;end end end elseif ((v84<=(14 + 26)) or (1838>2471)) then if (v84<=(1651 -(1565 + 48))) then if ((2444<3313) and (v84>(725 -(364 + (957 -633))))) then v81[v83[2 + 0 ]]();else v81[v83[4 -2 ]]=v61[v83[(2546 -(851 + 554)) -(692 + 90 + 356) ]];end elseif (v84>(306 -(176 + 91))) then local v192=0 -0 ;local v193;local v194;while true do if ((0 -0)==v192) then v193=v83[1270 -(1249 + 19) ];v194=v81[v83[4 -1 ]];v192=1093 -(975 + 117) ;end if ((v192==(1876 -(157 + 1718))) or (3685<=185)) then v81[v193 + 1 + 0 ]=v194;v81[v193]=v194[v83[(38 -24) -10 ]];break;end end else v81[v83[(12 -6) -4 ]]={};end elseif (v84<=(33 + 9)) then if ((738<=1959) and (v84==(1059 -(697 + 321)))) then if ((v83[5 -3 ]<=v81[v83[1 + 3 ]]) or (1317==3093)) then v75=v75 + (1 -0) ;else v75=v83[1 + 2 ];end else local v196=v83[4 -2 ];v81[v196]=v81[v196](v13(v81,v196 + (471 -(224 + 246)) ,v83[2 + 1 ]));end elseif (v84==(78 -35)) then v81[v83[3 -(303 -(115 + 187)) ]][v83[1 + 2 ]]=v81[v83[10 -6 ]];else v81[v83[1229 -(322 + 905) ]]=v81[v83[614 -(602 + 9) ]][v83[(914 + 279) -(449 + 740) ]];end elseif ((v84<=(924 -(826 + 46))) or (2611>=4435)) then if (v84<=(995 -(245 + 702))) then if ((v84<=(145 -(94 + 5))) or (117>4925)) then if (v84==(15 + 30)) then do return;end else local v202=1898 -(260 + 1638) ;local v203;while true do if ((107<=4905) and ((440 -(382 + 58))==v202)) then v203=v81[v83[12 -8 ]];if v203 then v75=v75 + 1 + 0 ;else local v460=0 -(0 -0) ;while true do if (v460==(0 -0)) then v81[v83[1207 -(902 + 303) ]]=v203;v75=v83[5 -2 ];break;end end end break;end end end elseif (v84==((1274 -(160 + 1001)) -(58 + 8))) then local v204=0 + 0 ;local v205;while true do if (v204==0) then v205=v81[v83[1694 -(1121 + 569) ]];if v205 then v75=v75 + 1 + 0 ;else local v461=214 -(16 + 6 + 192) ;while true do if (((0 + (0 -0))==v461) or (1004>4035)) then v81[v83[685 -((841 -(237 + 121)) + 200) ]]=v205;v75=v83[1489 -((932 -(525 + 372)) + (2750 -1299)) ];break;end end end break;end end else local v206=v72[v83[1466 -(1404 + 59) ]];local v207;local v208={};v207=v10({},{__index=function(v319,v320) local v321=0 -0 ;local v322;while true do if ((v321==(0 -0)) or (2802<369)) then v322=v208[v320];return v322[766 -(468 + 297) ][v322[564 -(334 + 228) ]];end end end,__newindex=function(v323,v324,v325) local v326=0 -0 ;local v327;while true do if ((0 -0)==v326) then v327=v208[v324];v327[1 -0 ][v327[1 + 1 ]]=v325;break;end end end});for v328=1 + 0 ,v83[4] do v75=v75 + ((379 -(96 + 46)) -(141 + 95)) ;local v329=v71[v75];if (v329[1 + 0 ]==(238 -145)) then v208[v328-(2 -1) ]={v81,v329[8 -5 ]};else v208[v328-(1 + 0) ]={v61,v329[2 + 1 ]};end v80[ #v80 + (1 -(0 + 0)) ]=v208;end v81[v83[2 + 0 ]]=v29(v206,v207,v62);end elseif ((1497<=2561) and (v84<=(213 -(92 + 71)))) then if ((v84>(25 + 24)) or (816>1712)) then v81[v83[2 -0 ]]=v61[v83[7 -4 ]];elseif  not v81[v83[767 -(574 + 191) ]] then v75=v75 + 1 + 0 ;else v75=v83[7 -4 ];end elseif (v84>51) then if ((v81[v83[2 + 0 ]]<=v83[3 + 1 ]) or (2733==2971)) then v75=v75 + (850 -(254 + 595)) ;else v75=v83[(309 -180) -(55 + 71) ];end elseif (v83[2 -0 ]==v81[v83[1794 -(573 + 1217) ]]) then v75=v75 + ((7 -5) -1) ;else v75=v83[1 + 2 ];end elseif (v84<=(89 -33)) then if (v84<=(993 -(714 + 225))) then if (v84==53) then v75=v83[(8 + 0) -5 ];else local v213=1780 -(389 + 1391) ;local v214;while true do if ((0 -0)==v213) then v214=v83[1 + 1 ];v81[v214]=v81[v214](v81[v214 + (1 -0) ]);break;end end end elseif (v84==(861 -(118 + 688))) then v81[v83[50 -(25 + 23) ]][v83[1 + 2 ]]=v83[4 + 0 ];else local v217=1886 -(927 + 959) ;local v218;local v219;local v220;while true do if (v217==(0 -0)) then v218=v72[v83[735 -(16 + 716) ]];v219=nil;v217=1 -0 ;end if ((2599<4050) and (v217==(1213 -(1090 + (239 -117))))) then v220={};v219=v10({},{__index=function(v430,v431) local v432=v220[v431];return v432[98 -(11 + 86) ][v432[4 -2 ]];end,__newindex=function(v433,v434,v435) local v436=285 -(175 + 110) ;local v437;while true do if ((1118 -(628 + 490))==v436) then v437=v220[v434];v437[2 -1 ][v437[4 -2 ]]=v435;break;end end end});v217=9 -7 ;end if (v217==((17 -8) -(726 -(316 + 403)))) then for v438=1797 -(503 + 860 + 433) ,v83[11 -(19 -12) ] do local v439=0 -0 ;local v440;while true do if ((2034==2034) and (v439==(0 + 0))) then v75=v75 + (1062 -(810 + 251)) ;v440=v71[v75];v439=1 + 0 ;end if ((3040<4528) and (v439==1)) then if (v440[1 + 0 + 0 ]==(84 + 9)) then v220[v438-(170 -(28 + (354 -213))) ]={v81,v440[736 -(711 + 22) ]};else v220[v438-(1 + 0) ]={v61,v440[7 -4 ]};end v80[ #v80 + 1 + 0 ]=v220;break;end end end v81[v83[(2 + 0) -0 ]]=v29(v218,v219,v62);break;end end end elseif (v84<=58) then if (v84>(2 + 2 + 53)) then v81[v83[1746 -(1344 + 400) ]]=v29(v72[v83[408 -((883 -628) + 150) ]],nil,v62);elseif v81[v83[2]] then v75=v75 + 1 + 0 ;else v75=v83[2 + 1 ];end elseif (v84>(251 -192)) then if (v81[v83[6 -4 ]]==v83[10 -6 ]) then v75=v75 + (1740 -(404 + 1335)) ;else v75=v83[409 -(183 + 223) ];end elseif (v83[2 -0 ]<=v81[v83[3 + (4 -3) ]]) then v75=v75 + 1 + 0 ;else v75=v83[5 -2 ];end elseif (v84<=(428 -(10 + 327))) then if (v84<=(53 + 22)) then if ((v84<=(405 -(118 + 220))) or (2092<=2053)) then if ((2120<4799) and (v84<=(21 + 42))) then if ((v84<=(510 -(108 + 341))) or (4538<=389)) then v81[v83[1 + 1 ]][v81[v83[12 -9 ]]]=v81[v83[1497 -(711 + 782) ]];elseif (v84>(118 -(116 -60))) then for v331=v83[471 -(270 + 12 + 187) ],v83[3] do v81[v331]=nil;end else v81[v83[1 + 1 ]]=v62[v83[1822 -(580 + 1239) ]];end elseif ((270<=1590) and (v84<=(193 -128))) then if (v84>(62 + 2)) then v81[v83[1 + 1 ]]=v83[2 + 1 ] + v81[v83[9 -5 ]] ;else v81[v83[2 -0 ]]();end elseif ((1625>1265) and (v84>(42 + 24))) then v81[v83[1169 -(645 + 522) ]]=v81[v83[1793 -(1010 + 780) ]] -v81[v83[4 + (0 -0) ]] ;else v81[v83[9 -7 ]]=v81[v83[8 -5 ]]%v83[1840 -(1045 + 791) ] ;end elseif (v84<=(179 -108)) then if (v84<=(104 -35)) then if ((v84>(573 -(18 + 333 + 154))) or (51>=920)) then local v227=v83[1576 -(1281 + (862 -569)) ];v81[v227](v81[v227 + (267 -(28 + 238)) ]);elseif (v81[v83[1 + 1 ]]~=v81[v83[8 -4 ]]) then v75=v75 + (3 -2) ;else v75=v83[1562 -(1381 + 178) ];end elseif (v84==(66 + 4)) then local v228=0 + 0 ;local v229;local v230;while true do if (v228==(1 + 0)) then for v441=3 -2 , #v80 do local v442=v80[v441];for v462=0 + 0 , #v442 do local v463=470 -(381 + 89) ;local v464;local v465;local v466;while true do if ((v463==(0 + 0)) or (2968<=1998)) then v464=v442[v462];v465=v464[1];v463=1 + 0 ;end if (v463==((18 -(12 + 5)) -0)) then v466=v464[(4497 -3339) -(1074 + 82) ];if ((v465==v81) and (v466>=v229)) then v230[v466]=v465[v466];v464[1 -0 ]=v230;end break;end end end end break;end if ((v228==(1726 -(1165 + (1196 -635)))) or (3085<=2742)) then v229=v83[1786 -(214 + 1570) ];v230={};v228=(1 -0) + 0 ;end end else local v231=v83[6 -4 ];v81[v231]=v81[v231](v13(v81,v231 + 1 + 0 ,v76));end elseif (v84<=(1528 -(990 + 465))) then if (v84>(551 -(341 + 138))) then v81[v83[2]]=v81[v83[(4 -2) + 1 + 0 ]] + v81[v83[2 + 2 ]] ;else local v234=v83[2 + (1973 -(1656 + 317)) ];local v235={v81[v234](v81[v234 + (1727 -(1668 + 58)) ])};local v236=626 -(512 + 114) ;for v333=v234,v83[1224 -(855 + 365) ] do local v334=0 -0 ;while true do if (v334==(0 -0)) then v236=v236 + (3 -2) ;v81[v333]=v235[v236];break;end end end end elseif (v84==(35 + 39)) then if ((v81[v83[1 + 1 ]]<v81[v83[4 + 0 ]]) or (376>=2083)) then v75=v75 + (3 -2) ;else v75=v83[1997 -(109 + 1885) ];end elseif v81[v83[1471 -(1269 + 200) ]] then v75=v75 + ((1 + 0) -(0 + 0)) ;else v75=v83[818 -(98 + 717) ];end elseif (v84<=(909 -(802 + 24))) then if (v84<=(135 -(148 -92))) then if (v84<=(96 -19)) then if (v84==76) then v81[v83[1 + 1 ]]=v81[v83[3 + (0 -0) ]] + v83[1 + 3 ] ;elseif (v81[v83[1 + 1 ]]<=v83[11 -7 ]) then v75=v75 + (3 -2) ;else v75=v83[2 + 1 ];end elseif (v84==(1293 -(369 + 846))) then v81[v83[1 + 1 ]]=v81[v83[(357 -(5 + 349)) + 0 ]] -v83[(9257 -7308) -(1036 + 909) ] ;else local v239=v83[2 + (1271 -(266 + 1005)) ];do return v13(v81,v239,v239 + v83[3 + 0 ] );end end elseif (v84<=(38 + 43)) then if (v84==(1513 -(797 + 636))) then v81[v83[(6 + 3) -7 ]]=v83[1622 -(1427 + 192) ] + v81[v83[179 -((460 -325) + (52 -12)) ]] ;else for v335=v83[(1697 -(561 + 1135)) + 1 ],v83[6 -3 ] do v81[v335]=nil;end end elseif (v84==(50 + (41 -9))) then v81[v83[4 -2 ]]=v81[v83[4 -1 ]] * v81[v83[4 + 0 ]] ;else do return v81[v83[178 -(50 + 126) ]];end end elseif (v84<=(40 + 47)) then if ((4191>1232) and (v84<=(19 + 66))) then if (v84>((4920 -3423) -(1233 + 180))) then if (v83[328 -((1258 -(507 + 559)) + 134) ]<v81[v83[(2441 -1468) -(522 + 447) ]]) then v75=v83[(3955 -2676) -(316 + 960) ];else v75=v75 + 1 + 0 ;end else v81[v83[2 + 0 ]][v81[v83[(390 -(212 + 176)) + 1 ]]]=v81[v83[(909 -(250 + 655)) + 0 ]];end elseif ((v84>(328 -(659 -417))) or (1505>4873)) then local v244=551 -(83 + 468) ;local v245;while true do if (v244==(1806 -(1202 + 604))) then v245=v83[9 -7 ];v81[v245](v13(v81,v245 + (1 -0) ,v83[(13 -5) -5 ]));break;end end else local v246=325 -((70 -25) + (2236 -(1869 + 87))) ;local v247;local v248;local v249;while true do if (v246==((6 -4) -(1902 -(484 + 1417)))) then v249=0 + 0 ;for v445=v247,v83[4 + 0 ] do local v446=0 + 0 ;while true do if (v446==(0 + 0)) then v249=v249 + 1 + (0 -0) ;v81[v445]=v248[v249];break;end end end break;end if (v246==(0 -0)) then v247=v83[1913 -((569 -229) + 1571) ];v248={v81[v247](v81[v247 + 1 + 0 ])};v246=(775 -(48 + 725)) -1 ;end end end elseif (v84<=(1861 -(1733 + 39))) then if (v84==(241 -153)) then v61[v83[1037 -(125 + 909) ]]=v81[v83[1950 -(1096 + 852) ]];elseif (v83[1 + 1 ]<v81[v83[4]]) then v75=v75 + ((1 -0) -0) ;else v75=v83[3 + 0 ];end elseif (v84>90) then v81[v83[514 -(409 + 103) ]]=v81[v83[239 -((123 -77) + 190) ]] * v83[979 -(815 + 160) ] ;else local v253=95 -(51 + 44) ;local v254;local v255;local v256;local v257;while true do if ((3880<4534) and (v253==(0 + 0))) then v254=v83[1319 -(648 + 466 + 203) ];v255,v256=v74(v81[v254]());v253=727 -(228 + 498) ;end if (v253==(1 + 0)) then v76=(v256 + v254) -(1 + 0) ;v257=(1771 -1108) -(49 + 125 + 489) ;v253=5 -3 ;end if (v253==2) then for v447=v254,v76 do local v448=0 -0 ;while true do if ((v448==(0 -0)) or (2368>=2541)) then v257=v257 + (1906 -(830 + 1075)) ;v81[v447]=v255[v257];break;end end end break;end end end elseif (v84<=(1288 -(229 + 953))) then if (v84<=((182 + 440) -(303 + 221))) then if (v84<=(1363 -(231 + 1038))) then if (v84<=(77 + 15)) then local v134=0 + 0 ;local v135;local v136;while true do if ((1162 -(171 + 991))==v134) then v135=v83[8 -(859 -(152 + 701)) ];v136={};v134=2 -1 ;end if (((2 -1)==v134) or (4733<=4103)) then for v368=1 + 0 , #v80 do local v369=0 + 0 ;local v370;while true do if (v369==((1311 -(430 + 881)) -0)) then v370=v80[v368];for v468=0 + 0 , #v370 do local v469=v370[v468];local v470=v469[3 -2 ];local v471=v469[5 -3 ];if ((v470==v81) and (v471>=v135)) then local v495=0 -0 ;while true do if ((v495==(0 -0)) or (1207==4273)) then v136[v471]=v470[v471];v469[3 -2 ]=v136;break;end end end end break;end end end break;end end elseif (v84>(1341 -(43 + 68 + 1137))) then local v258=(1053 -(557 + 338)) -(91 + 20 + 47) ;local v259;local v260;while true do if (v258==(1 + 0)) then for v449=v259 + (2 -1) ,v76 do v7(v260,v81[v449]);end break;end if (v258==(0 + 0)) then v259=v83[525 -(423 + (281 -181)) ];v260=v81[v259];v258=1 + (0 -0) ;end end else v81[v83[5 -3 ]]=v81[v83[2 + 1 ]];end elseif (v84<=(867 -((865 -539) + 445))) then if (v84>(414 -319)) then v81[v83[4 -2 ]]=v83[6 -3 ]~=(711 -(530 + 181)) ;v75=v75 + (882 -((1323 -709) + 267)) ;else v62[v83[35 -(19 + 13) ]]=v81[v83[(803 -(499 + 302)) -0 ]];end elseif (v84>(225 -128)) then v81[v83[1 + 1 ]]=v81[v83[8 -(871 -(39 + 827)) ]]/v81[v83[1836 -(1552 + 280) ]] ;else local v267=0 + 0 ;local v268;while true do if (v267==(0 -0)) then v268=v83[3 -(2 -1) ];v81[v268]=v81[v268]();break;end end end elseif ((v84<=(1914 -(1293 + 519))) or (2005==2529)) then if (v84<=(204 -104)) then if (v84>(257 -158)) then if ((986<3589) and (v83[3 -1 ]<v81[v83[17 -13 ]])) then v75=v75 + (2 -1) ;else v75=v83[2 + 1 ];end else local v269=v83[1 + 1 ];local v270=v81[v269];local v271=v83[6 -3 ];for v338=1 -0 ,v271 do v270[v338]=v81[v269 + v338 ];end end elseif ((v84>(24 + 77)) or (3119==430)) then local v272=0;local v273;while true do if (v272==(0 + 0)) then v273=v83[2 + 0 ];v81[v273]=v81[v273](v81[v273 + ((2449 -1352) -(709 + 387)) ]);break;end end else local v274=1931 -((7200 -5387) + 118) ;local v275;local v276;local v277;while true do if ((2409<=3219) and ((1858 -(673 + 1185))==v274)) then v275=v83[5 -3 ];v276=v81[v275];v274=3 -2 ;end if ((1 -0)==v274) then v277=v83[3 + 0 ];for v450=1 + 0 ,v277 do v276[v450]=v81[v275 + v450 ];end break;end end end elseif (v84<=((214 -74) -36)) then if (v84==(26 + 77)) then if ((v81[v83[839 -(40 + 427 + 370) ]]<v83[7 -3 ]) or (898>2782)) then v75=v75 + (1 -0) ;else v75=v83[(14 -9) -2 ];end elseif ((v81[v83[1882 -(446 + 1434) ]]==v81[v83[1287 -(1040 + 243) ]]) or (2250<=1764)) then v75=v75 + 1 ;else v75=v83[8 -5 ];end elseif ((693==693) and (v84>((313 + 1639) -(559 + 1288)))) then do return;end else local v278=v83[1933 -((963 -354) + 1322) ];v81[v278](v81[v278 + (521 -(150 + 370)) ]);end elseif ((v84<=(568 -(13 + 441))) or (2529==438)) then if (v84<=(411 -301)) then if (v84<=(282 -174)) then if ((1751>1411) and (v84>107)) then do return v81[v83[(113 -(103 + 1)) -7 ]];end else local v279=0;local v280;while true do if ((4182==4182) and (v279==((554 -(475 + 79)) + 0))) then v280=v83[(14 -7) -5 ];v81[v280]=v81[v280](v13(v81,v280 + (391 -(14 + (1203 -827))) ,v76));break;end end end elseif ((v84>(188 -(11 + 68))) or (4666<=611)) then v81[v83[2 + 0 ]]=v83[2 + 0 + 1 ];else local v283=0 + 0 ;while true do if ((0 -(1503 -(1395 + 108)))==v283) then v81[v83[2 + 0 ]]=v83[2 + 1 ]~=(0 -(0 -0)) ;v75=v75 + 1 + 0 ;break;end end end elseif ((v84<=(101 + 11)) or (4737<=4525)) then if (v84==(62 + 49)) then local v284=0 + 0 ;local v285;local v286;while true do if ((4367>=3735) and (v284==((1204 -(7 + 1197)) + 0))) then v285=v83[2];v286=v81[v83[3 + 0 ]];v284=(190 + 244) -(153 + 280) ;end if ((2426==2426) and (v284==(2 -1))) then v81[v285 + 1 + 0 ]=v286;v81[v285]=v286[v83[2 + 2 ]];break;end end else v81[v83[2]]=v81[v83[3]][v83[2 + 1 + 1 ]];end elseif ((21<1971) and (v84==(205 -92))) then v62[v83[(322 -(27 + 292)) + 0 ]]=v81[v83[2 + 0 ]];else v81[v83[2 -0 ]]=v81[v83[2 + 1 ]];end elseif (v84<=(785 -(89 + 578))) then if ((v84<=116) or (2922<=441)) then if (v84>(83 + 32)) then if (v81[v83[3 -1 ]]<v81[v83[1053 -(572 + 477) ]]) then v75=v75 + 1 ;else v75=v83[1 + 2 ];end elseif ((3624>=1136) and (v81[v83[2 + 0 ]]<=v81[v83[1 + 3 ]])) then v75=v75 + (87 -(84 + 2)) ;else v75=v83[4 -(2 -1) ];end elseif (v84>(104 + 13)) then v75=v83[3 + 0 ];else v81[v83[844 -(497 + 345) ]]=v81[v83[3 -0 ]]/v83[1 + 3 ] ;end elseif (v84<=(21 + 99)) then if (v84>(1452 -(605 + 728))) then local v295=v83[2 + 0 ];local v296=v83[2 + 2 ];local v297=v295 + (3 -(1 -0)) ;local v298={v81[v295](v81[v295 + 1 ],v81[v297])};for v341=1 + 0 ,v296 do v81[v297 + v341 ]=v298[v341];end local v299=v298[1 + 0 ];if v299 then v81[v297]=v299;v75=v83[5 -2 ];else v75=v75 + (2 -(1 -0)) ;end else local v300=0 -0 ;local v301;local v302;local v303;local v304;while true do if ((2043<2647) and (v300==(0 -0))) then v301=v83[1 + 1 ];v302,v303=v74(v81[v301](v13(v81,v301 + 1 + 0 ,v83[7 -4 ])));v300=1 + 0 ;end if (((490 -(457 + 32))==v300) or (354>=1534)) then v76=(v303 + v301) -(1 + 0) ;v304=0 -0 ;v300=1404 -(832 + 570) ;end if (((2 + 0)==v300) or (3764>=4876)) then for v453=v301,v76 do local v454=0;while true do if ((3676>=703) and (v454==(1174 -(663 + 511)))) then v304=v304 + 1 ;v81[v453]=v302[v304];break;end end end break;end end end elseif (v84>(32 + 89)) then v81[v83[6 -4 ]]=v81[v83[2 + 1 ]] + v83[800 -((727 -(43 + 96)) + 208) ] ;else v81[v83[5 -3 ]]=v62[v83[1803 -(884 + 916) ]];end v75=v75 + 1 + 0 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
